#!/bin/bash

_err () {
    echo "$1" >&2
    exit $2
}

[[ -z "$1" ]] && _err "Need to specify one of: all gitdave git bashrc"

if [[ $1 == all ]]; then
    dotfiles="bashrc git-prompt.sh git-completion.sh gitconfig "
elif [[ $1 == gitdave ]]; then
    dotfiles="bashrc git-prompt.sh git-completion.sh gitconfig"
elif [[ $1 == git ]]; then
    dotfiles="bashrc git-prompt.sh git-completion.sh"
elif [[ $1 == bashrc ]]; then
    dotfiles="bashrc"
fi

dir=$(readlink --canonicalize "$(dirname "$0")")

# dev machine - somewhat ugly, but this ensures updates are available to the dev user
# without having to run any install script
[[ -d "$HOME"/code/dotfiles ]] && dir="$HOME"/code/dotfiles

for dotfile in $dotfiles
do
    [[ -L "$HOME/.$dotfile" ]] && rm -f "$HOME/.$dotfile"

    if [[ -f "$HOME/.$dotfile" ]]
    then
        ts=$(date +"%Y-%m-%d_%H-%M-%S")
        mv "$HOME/.$dotfile" "$HOME/.$dotfile.$ts" || _err "Couldn't mv $HOME/.$dotfile $HOME/.$dotfile.$ts: $?" $?
    fi

    ln -s "$dir/$dotfile" "$HOME/.$dotfile"
done

echo "REMEMBER TO LOG OUT AND BACK IN FOR UPDATES TO TAKE EFFECT" >&2

[[ $EUID == 0 ]] && exit 0

groups | grep sudo > /dev/null 2>&1 || exit 0

"$dir"/setup-cpanm
